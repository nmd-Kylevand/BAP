/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    earth_color_10K: THREE.Mesh
    earth_color_10K001: THREE.Mesh
    Curve: THREE.Mesh
    Curve006: THREE.Mesh
    Curve001: THREE.Mesh
    Curve002: THREE.Mesh
    Curve003: THREE.Mesh
    Curve004: THREE.Mesh
    Curve005: THREE.Mesh
  }
  materials: {
    earth_color_10K: THREE.MeshStandardMaterial
    clouds: THREE.MeshStandardMaterial
    ['SVGMat.003']: THREE.MeshStandardMaterial
    ['SVGMat.008']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'CurveAction.005' | 'Curve.006Action.002' | 'Curve.001Action.001' | 'Curve.002Action' | 'Curve.003Action' | 'Curve.004Action' | 'Curve.005Action.001'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/earthFinal_withAnimations2-transformed.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="earth_color_10K" geometry={nodes.earth_color_10K.geometry} material={materials.earth_color_10K} position={[-0.01, 0.09, 0]} rotation={[0.55, 1.03, -0.61]} />
        <mesh name="earth_color_10K001" geometry={nodes.earth_color_10K001.geometry} material={materials.clouds} position={[0.04, 0.12, -0.02]} rotation={[0.55, 1.03, -0.61]} />
        <mesh name="Curve" geometry={nodes.Curve.geometry} material={materials['SVGMat.003']} position={[1.77, 1.41, 0.62]} scale={0} />
        <mesh name="Curve006" geometry={nodes.Curve006.geometry} material={materials['SVGMat.008']} position={[1.68, 1.35, 0.94]} scale={0} />
        <mesh name="Curve001" geometry={nodes.Curve001.geometry} material={materials['SVGMat.008']} position={[1.93, 0.93, 1.06]} scale={0} />
        <mesh name="Curve002" geometry={nodes.Curve002.geometry} material={materials['SVGMat.008']} position={[1.96, 1.13, 0.66]} scale={0} />
        <mesh name="Curve003" geometry={nodes.Curve003.geometry} material={materials['SVGMat.008']} position={[1.82, 0.97, 1.12]} scale={0} />
        <mesh name="Curve004" geometry={nodes.Curve004.geometry} material={materials['SVGMat.008']} position={[1.86, 0.93, 1.07]} scale={0} />
        <mesh name="Curve005" geometry={nodes.Curve005.geometry} material={materials['SVGMat.008']} position={[1.79, 1.52, 0.29]} scale={0} />
      </group>
    </group>
  )
}

useGLTF.preload('/earthFinal_withAnimations2-transformed.glb')
